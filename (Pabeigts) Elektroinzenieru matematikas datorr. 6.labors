%% 6.Laboratorijas darbs
%% Videjas un efektivas vertibas noteiksana
% Videjas vertibas noteiksana
syms x 

k=-0.5;
deltaT=6;
% Videjas vertibas meklesana 
% izmantojot matlaba iebuveto skaitlisko integresanu
g1 = double(int(k*(x-0),x, 0, 0.5));
syms t_sin
A0 = 0; A = 1; T = (2.5-0.5)/8; f =1/T;
delay = 0.5;
y_sin = A0-A*sin(2*pi*f*(t_sin-delay));
g2 = double(int(y_sin,t_sin,0.5,2.5));
%g2 = double(int(1*sin(2*pi*3.5*x-pi), x, 0.5, 2.5));
g3 = double(int(0, x, 2.5, 4.5));
g4 = double(int(zeros(size(x))-1.5, x, 4.5, 6));
g5 = double(int(0*x, x, 6, 7.5));

%% Ka rekinat efektivo vertibu
% 1.Patiesa efektiva vertiba
vid = (g1+g2+g3+g4+g5)/7.5; %jāuzskata par pareizo
disp('patiesa videja vertiiba'),vid,
ef1 = double(int((k*(x-0))^2,x, 0, 0.5));
ef2 = double(int((1*sin(2*pi*3.5*x-pi))^2, x, 0.5, 2.5));
ef3 = double(int((0)^2, x, 2.5, 4.5));
ef4 = double(int((-1)^2, x, 4.5, 6));
ef5 = double(int(0*x^2,x,6,7.5));

%% Ka rekinat efektivo vertibu(2)
% Kas kapina to kvadrata (tas bus rokturis uz anonimo funkciju)
ef = (sqrt((ef1+ef2+ef3+ef4+ef5)/7.5));
disp('patiesa efektiva vertiiba'),ef,
%xv3c=1/(N-1)*(sum(sig(t(1:end)+h/2)))
sigkv = @(t) lab3_fun(t).^2;

dt = [0.1 0.01 0.001 0.0001];
for dtc=dt
    
    t=0:dtc:7.5;
    h=dtc;
    N = length(t);
    xv3c=1/(N-1)*(sum(lab3_fun(t(1:end-1)+h/2)));
        xef3c=sqrt(1/(N-1)*(sum(sigkv(t(1:end-1)+h/2))));
        
    fprintf('|dt=%0.4f\t|vv=%f\t||ef=%f\t|\n',dtc,xv3c,xef3c);
end
% quad funkcijai var noradit precizitati ar 
% kuru ta rekinas sintaksi
tol = [1e-3 1e-4 1e-5 1e-6 1e-7];
for tolc = tol
    xvquad=1/(t(end)-t(1))*quad(@lab3_fun,t(1),t(end),tolc);

    fprintf('|tol=%0.7f\t|vv=%f\t||ef=%f\t|\n',tolc,xvquad,xef3c);
end



h = 0.01; %pie lielāka soļa abas vid vērtības būs precīzākas
t = 0:h:7.5;
vid_t = (1/(length(t)-1)) * sum(lab3_fun(t(1:end-1))); %skaitliskā katru reizi dos citādu rezultātu jo ir troksnis

ef_t = (1/(length(t)-1)) * sum(lab3_fun(t(1:end-1)));

plot(t,lab3_fun(t),t,vid*ones(size(t)),'r--')
grid on

%% Secinajumi
% Efektiva vertiba ir ļoti preciza
% Patiesa efektiva vertiba tiek ieguta pakapeniski un ari ir preciza









function y=lab3_fun(t)
if nargin == 0
    t = 0:0.01:7.5;
end
% t_saw = 0:0.01:0.5;
t_sawf = (t>=0)&(t<=0.5); t_saw=t(t_sawf);

% t_sin = 0.5:0.01:2.5;
t_sinf = (t>0.5)&(t<2.5); t_sin=t(t_sinf); 

% t_noise = 2.5:0.01:4.5;
t_noisef = (t>=2.5)&(t<4.5); t_noise=t(t_noisef); 

% t_const = 4.5:0.01:6;
t_constf = (t>=4.5)&(t<=6); t_const=t(t_constf); 

% t_zero  = 6:0.01:7.5;
t_zerof = (t>6)&(t<=7.5); t_zero=t(t_zerof); 
%% Sinusoida
%
A0 = 0; A = 1; T = (2.5-0.5)/8; f =1/T;
delay = 0.5;
y_sin = A0-A*sin(2*pi*f*(t_sin-delay));
%plot(t_sin,y_sin)
%% Lineari mainigs signals
%
%       yA-yB
% k = ------------
%       tA-tB
k = (0-(-0.25))/(0-0.5);
delay = 0;
% (Delay) Jaskatas viduspunkts
y_saw = k*(t_saw-delay);
%plot(t_saw,y_saw)
%% Konstante
%
%y_const = [2.5 2.5 2.5  % 201 reizi atkartot]
y_const = (-1)*ones(size(t_const));
%plot(t_const,y_const)
%% Nulles signals
%
y_zero = 0*ones(size(t_zero)); 
%plot(t_zero,y_zero)
%% Troksna signals
%
y_noise = 1*rand(size(t_noise))-0.5;
y_noise = 0*t_noise;% pagaidu
%plot(t_noise,y_noise)
%% Vektoru apvienosana 
%t = [t_zero,t_sin,t_noise,t_const,t_saw];
y = [y_saw,y_sin,y_noise,y_const,y_zero];
if nargout == 0
    plot(t,y)
    y = [];
end
%plot(y)







>> lab62
patiesa videja vertiiba

vid =

   -0.3083

patiesa efektiva vertiiba

ef =

    0.5786

|dt=0.1000	|vv=-0.208333	||ef=0.578540	|
|dt=0.0100	|vv=-0.208333	||ef=0.578552	|
|dt=0.0010	|vv=-0.208333	||ef=0.578552	|
|dt=0.0001	|vv=-0.208333	||ef=0.578552	|
|tol=0.0010000	|vv=-0.311324	||ef=0.578552	|
|tol=0.0001000	|vv=-0.314853	||ef=0.578552	|
|tol=0.0000100	|vv=-0.293101	||ef=0.578552	|
|tol=0.0000010	|vv=-0.292914	||ef=0.578552	|
|tol=0.0000001	|vv=-0.208333	||ef=0.578552	|
>> 
